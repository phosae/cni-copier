name: Image Builder

on:
  label:
    types:
      - created
  push:
    branches:
      - main
  issues:
    types:
      - opened
      - labeled

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Checkout copier
        uses: actions/checkout@master
        with:
          repository: phosae/cni-copier
          path: ./cni-copier

      - name: Checkout CNI plugins repo
        uses: actions/checkout@master
        with: 
          repository: containernetworking/plugins
          path: ./plugins
          submodules: recursive
      
      - name: Checkout CNI lib repo
        uses: actions/checkout@master
        with: 
          repository: containernetworking/cni
          path: ./cnilib
      
      - name: Copy debug plugin
        run: mv ./cnilib/plugins/debug ./plugins/plugins/meta/ && rm plugins/plugins/meta/debug/{go.mod,go.sum}
      
      - name: Short Commit ID
        id: commit
        run: |
          echo "CNI_VERSION=$(git --git-dir=./plugins/.git --work-tree=./plugins rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Show Commit ID
        run: |
          echo "cni_version: ${{ env.CNI_VERSION }}"

      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Build AMD64 Plugins
        run: |
          GOOS=linux GOARCH=amd64 ./plugins/build_linux.sh -ldflags '-extldflags -static -X github.com/containernetworking/plugins/pkg/utils/buildversion.BuildVersion=${{ env.CNI_VERSION }}'

      - name: Copy AMD64 Plugins
        run: mv ./plugins/bin ./cni-copier/cni-bin-amd64
      
      - name: Build ARM64 Plugins
        run: |
          GOOS=linux GOARCH=arm64 ./plugins/build_linux.sh -ldflags '-extldflags -static -X github.com/containernetworking/plugins/pkg/utils/buildversion.BuildVersion=${{ env.CNI_VERSION }}'

      - name: Copy ARM64 Plugins
        run: mv ./plugins/bin ./cni-copier/cni-bin-arm64

      - name: Build AMD64 copier
        run: GO111MODULE=off  GOOS=linux GOARCH=amd64 go build -o ./cni-copier/bin/copier-amd64 ./cni-copier/

      - name: Build ARM64 copier
        run: GO111MODULE=off  GOOS=linux GOARCH=arm64 go build -o ./cni-copier/bin/copier-arm64 ./cni-copier/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: zengxu
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push to Docker Hub 
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./cni-copier
          # Note: tags has to be all lower-case
          tags: |
            zengxu/cni-copier:${{ env.CNI_VERSION }} 
          platforms: |
            linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
